{"ast":null,"code":"var _jsxFileName = \"/Users/Jamie/Desktop/School/pui/homework_5/src/colorPicker.js\";\nimport \"./App.css\";\nimport React, { Component } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst currentColor = \"Cozy Denim\";\n\nclass ColorPicker extends Component {\n  constructor(props) {\n    super(props);\n\n    this.handleToggle = id => {\n      const newCurrentColor = this.state.items[id].color;\n      const newImagesPath = this.state.items[id].imgs;\n      const updatedItems = this.state.items.map(item => {\n        if (item.id === id && item.expanded === false) {\n          return {\n            expanded: item.id === id\n          };\n        }\n\n        if (item.expanded === true && item.id !== id) {\n          return {\n            expanded: item.id === id\n          };\n        } else {\n          return item;\n        }\n      });\n      this.setState({ ...this.state,\n        items: updatedItems,\n        currentColor: newCurrentColor,\n        imagesPath: newImagesPath\n      });\n      this.props.onColorChange(newCurrentColor);\n    };\n\n    this.state = {\n      currentColor: currentColor,\n      items: [{\n        id: 0,\n        expanded: true\n      }, {\n        id: 1,\n        expanded: false\n      }, {\n        id: 2,\n        expanded: false\n      }, {\n        id: 3,\n        expanded: false\n      }]\n    }; // this.state.items = props.colorList.map(color => {...colors, expanded: false}),\n    // this.state.items = props.fillList.map(fill => {...fill, expanded: false});\n  } // select and deselect\n  // one and only one will always be selected\n\n\n  render() {\n    return this.state.items.map(el => /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        onClick: () => this.handleToggle(el.id),\n        className: [el.bg, \"colorOption\", el.expanded ? \"selected\" : \"unselected\"].join(\" \")\n      }, el.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 7\n    }, this));\n  }\n\n}\n\nexport { ColorPicker, currentColor };","map":{"version":3,"sources":["/Users/Jamie/Desktop/School/pui/homework_5/src/colorPicker.js"],"names":["React","Component","currentColor","ColorPicker","constructor","props","handleToggle","id","newCurrentColor","state","items","color","newImagesPath","imgs","updatedItems","map","item","expanded","setState","imagesPath","onColorChange","render","el","bg","join"],"mappings":";AAAA,OAAO,WAAP;AACA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;;AAEA,MAAMC,YAAY,GAAG,YAArB;;AAEA,MAAMC,WAAN,SAA0BF,SAA1B,CAAoC;AAClCG,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACjB,UAAMA,KAAN;;AADiB,SA+BnBC,YA/BmB,GA+BHC,EAAD,IAAQ;AACrB,YAAMC,eAAe,GAAG,KAAKC,KAAL,CAAWC,KAAX,CAAiBH,EAAjB,EAAqBI,KAA7C;AACA,YAAMC,aAAa,GAAG,KAAKH,KAAL,CAAWC,KAAX,CAAiBH,EAAjB,EAAqBM,IAA3C;AACA,YAAMC,YAAY,GAAG,KAAKL,KAAL,CAAWC,KAAX,CAAiBK,GAAjB,CAAsBC,IAAD,IAAU;AAClD,YAAIA,IAAI,CAACT,EAAL,KAAYA,EAAZ,IAAkBS,IAAI,CAACC,QAAL,KAAkB,KAAxC,EAA+C;AAC7C,iBAAO;AACLA,YAAAA,QAAQ,EAAED,IAAI,CAACT,EAAL,KAAYA;AADjB,WAAP;AAGD;;AACD,YAAIS,IAAI,CAACC,QAAL,KAAkB,IAAlB,IAA0BD,IAAI,CAACT,EAAL,KAAYA,EAA1C,EAA8C;AAC5C,iBAAO;AACLU,YAAAA,QAAQ,EAAED,IAAI,CAACT,EAAL,KAAYA;AADjB,WAAP;AAGD,SAJD,MAIO;AACL,iBAAOS,IAAP;AACD;AACF,OAboB,CAArB;AAcA,WAAKE,QAAL,CAAc,EACZ,GAAG,KAAKT,KADI;AAEZC,QAAAA,KAAK,EAAEI,YAFK;AAGZZ,QAAAA,YAAY,EAAEM,eAHF;AAIZW,QAAAA,UAAU,EAAEP;AAJA,OAAd;AAMA,WAAKP,KAAL,CAAWe,aAAX,CAAyBZ,eAAzB;AACD,KAvDkB;;AAGjB,SAAKC,KAAL,GAAa;AACXP,MAAAA,YAAY,EAAEA,YADH;AAEXQ,MAAAA,KAAK,EAAE,CACL;AACEH,QAAAA,EAAE,EAAE,CADN;AAEEU,QAAAA,QAAQ,EAAE;AAFZ,OADK,EAKL;AACEV,QAAAA,EAAE,EAAE,CADN;AAEEU,QAAAA,QAAQ,EAAE;AAFZ,OALK,EASL;AACEV,QAAAA,EAAE,EAAE,CADN;AAEEU,QAAAA,QAAQ,EAAE;AAFZ,OATK,EAaL;AACEV,QAAAA,EAAE,EAAE,CADN;AAEEU,QAAAA,QAAQ,EAAE;AAFZ,OAbK;AAFI,KAAb,CAHiB,CAyBjB;AACA;AACD,GA5BiC,CA8BlC;AACA;;;AA2BAI,EAAAA,MAAM,GAAG;AACP,WAAO,KAAKZ,KAAL,CAAWC,KAAX,CAAiBK,GAAjB,CAAsBO,EAAD,iBAC1B;AAAA,6BACE;AAEE,QAAA,OAAO,EAAE,MAAM,KAAKhB,YAAL,CAAkBgB,EAAE,CAACf,EAArB,CAFjB;AAGE,QAAA,SAAS,EAAE,CACTe,EAAE,CAACC,EADM,EAET,aAFS,EAGTD,EAAE,CAACL,QAAH,GAAc,UAAd,GAA2B,YAHlB,EAITO,IAJS,CAIJ,GAJI;AAHb,SACOF,EAAE,CAACf,EADV;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,YADK,CAAP;AAaD;;AAxEiC;;AA2EpC,SAASJ,WAAT,EAAsBD,YAAtB","sourcesContent":["import \"./App.css\";\nimport React, { Component } from \"react\";\n\nconst currentColor = \"Cozy Denim\";\n\nclass ColorPicker extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      currentColor: currentColor,\n      items: [\n        {\n          id: 0,\n          expanded: true,\n        },\n        {\n          id: 1,\n          expanded: false,\n        },\n        {\n          id: 2,\n          expanded: false,\n        },\n        {\n          id: 3,\n          expanded: false,\n        },\n      ],\n    };\n\n    // this.state.items = props.colorList.map(color => {...colors, expanded: false}),\n    // this.state.items = props.fillList.map(fill => {...fill, expanded: false});\n  }\n\n  // select and deselect\n  // one and only one will always be selected\n  handleToggle = (id) => {\n    const newCurrentColor = this.state.items[id].color;\n    const newImagesPath = this.state.items[id].imgs;\n    const updatedItems = this.state.items.map((item) => {\n      if (item.id === id && item.expanded === false) {\n        return {\n          expanded: item.id === id,\n        };\n      }\n      if (item.expanded === true && item.id !== id) {\n        return {\n          expanded: item.id === id,\n        };\n      } else {\n        return item;\n      }\n    });\n    this.setState({\n      ...this.state,\n      items: updatedItems,\n      currentColor: newCurrentColor,\n      imagesPath: newImagesPath,\n    });\n    this.props.onColorChange(newCurrentColor);\n  };\n\n  render() {\n    return this.state.items.map((el) => (\n      <div>\n        <div\n          key={el.id}\n          onClick={() => this.handleToggle(el.id)}\n          className={[\n            el.bg,\n            \"colorOption\",\n            el.expanded ? \"selected\" : \"unselected\",\n          ].join(\" \")}\n        />\n      </div>\n    ));\n  }\n}\n\nexport { ColorPicker, currentColor };\n"]},"metadata":{},"sourceType":"module"}