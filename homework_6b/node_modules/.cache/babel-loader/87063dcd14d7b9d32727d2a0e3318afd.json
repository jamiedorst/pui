{"ast":null,"code":"var _jsxFileName = \"/Users/Jamie/Desktop/School/pui/homework_5/src/colorPicker.js\";\nimport \"./App.css\";\nimport React, { Component } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass colorPicker extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      items: [{\n        id: 1,\n        color: \"Cozy Denim\",\n        expanded: true\n      }, {\n        id: 2,\n        color: \"After School Special\",\n        expanded: false\n      }, {\n        id: 3,\n        color: \"Rainy Day\",\n        expanded: false\n      }, {\n        id: 4,\n        color: \"Morning Haze\",\n        expanded: false\n      }]\n    };\n\n    this.handleToggle = id => {\n      const updatedItems = this.state.items.map(item => {\n        if (item.id === id) {\n          return { ...item,\n            expanded: !item.expanded\n          };\n        } else {\n          return item;\n        }\n      });\n      this.setState({\n        items: updatedItems\n      });\n    };\n  }\n\n  render() {\n    return this.state.items.map(el => /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"pillowOptions\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        onClick: () => this.handleToggle(el.id),\n        className: el.expanded ? \"selected\" : \"unselected\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"colorOption blue\",\n          children: [\"this color is \", el.color]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 38,\n          columnNumber: 11\n        }, this)\n      }, el.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 7\n    }, this));\n  }\n\n}\n\nexport default colorPicker;","map":{"version":3,"sources":["/Users/Jamie/Desktop/School/pui/homework_5/src/colorPicker.js"],"names":["React","Component","colorPicker","state","items","id","color","expanded","handleToggle","updatedItems","map","item","setState","render","el"],"mappings":";AAAA,OAAO,WAAP;AACA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;;;AAEA,MAAMC,WAAN,SAA0BD,SAA1B,CAAoC;AAAA;AAAA;AAAA,SAClCE,KADkC,GAC1B;AACNC,MAAAA,KAAK,EAAE,CACL;AAAEC,QAAAA,EAAE,EAAE,CAAN;AAASC,QAAAA,KAAK,EAAE,YAAhB;AAA8BC,QAAAA,QAAQ,EAAE;AAAxC,OADK,EAEL;AAAEF,QAAAA,EAAE,EAAE,CAAN;AAASC,QAAAA,KAAK,EAAE,sBAAhB;AAAwCC,QAAAA,QAAQ,EAAE;AAAlD,OAFK,EAGL;AAAEF,QAAAA,EAAE,EAAE,CAAN;AAASC,QAAAA,KAAK,EAAE,WAAhB;AAA6BC,QAAAA,QAAQ,EAAE;AAAvC,OAHK,EAIL;AAAEF,QAAAA,EAAE,EAAE,CAAN;AAASC,QAAAA,KAAK,EAAE,cAAhB;AAAgCC,QAAAA,QAAQ,EAAE;AAA1C,OAJK;AADD,KAD0B;;AAAA,SASlCC,YATkC,GASlBH,EAAD,IAAQ;AACrB,YAAMI,YAAY,GAAG,KAAKN,KAAL,CAAWC,KAAX,CAAiBM,GAAjB,CAAsBC,IAAD,IAAU;AAClD,YAAIA,IAAI,CAACN,EAAL,KAAYA,EAAhB,EAAoB;AAClB,iBAAO,EACL,GAAGM,IADE;AAELJ,YAAAA,QAAQ,EAAE,CAACI,IAAI,CAACJ;AAFX,WAAP;AAID,SALD,MAKO;AACL,iBAAOI,IAAP;AACD;AACF,OAToB,CAArB;AAWA,WAAKC,QAAL,CAAc;AACZR,QAAAA,KAAK,EAAEK;AADK,OAAd;AAGD,KAxBiC;AAAA;;AA0BlCI,EAAAA,MAAM,GAAG;AACP,WAAO,KAAKV,KAAL,CAAWC,KAAX,CAAiBM,GAAjB,CAAsBI,EAAD,iBAC1B;AAAK,MAAA,SAAS,EAAC,eAAf;AAAA,6BACE;AAEE,QAAA,OAAO,EAAE,MAAM,KAAKN,YAAL,CAAkBM,EAAE,CAACT,EAArB,CAFjB;AAGE,QAAA,SAAS,EAAES,EAAE,CAACP,QAAH,GAAc,UAAd,GAA2B,YAHxC;AAAA,+BAKE;AAAK,UAAA,SAAS,EAAC,kBAAf;AAAA,uCAAiDO,EAAE,CAACR,KAApD;AAAA;AAAA;AAAA;AAAA;AAAA;AALF,SACOQ,EAAE,CAACT,EADV;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,YADK,CAAP;AAWD;;AAtCiC;;AAyCpC,eAAeH,WAAf","sourcesContent":["import \"./App.css\";\nimport React, { Component } from \"react\";\n\nclass colorPicker extends Component {\n  state = {\n    items: [\n      { id: 1, color: \"Cozy Denim\", expanded: true },\n      { id: 2, color: \"After School Special\", expanded: false },\n      { id: 3, color: \"Rainy Day\", expanded: false },\n      { id: 4, color: \"Morning Haze\", expanded: false },\n    ],\n  };\n  handleToggle = (id) => {\n    const updatedItems = this.state.items.map((item) => {\n      if (item.id === id) {\n        return {\n          ...item,\n          expanded: !item.expanded,\n        };\n      } else {\n        return item;\n      }\n    });\n\n    this.setState({\n      items: updatedItems,\n    });\n  };\n\n  render() {\n    return this.state.items.map((el) => (\n      <div className=\"pillowOptions\">\n        <div\n          key={el.id}\n          onClick={() => this.handleToggle(el.id)}\n          className={el.expanded ? \"selected\" : \"unselected\"}\n        >\n          <div className=\"colorOption blue\">this color is {el.color}</div>\n        </div>\n      </div>\n    ));\n  }\n}\n\nexport default colorPicker;\n"]},"metadata":{},"sourceType":"module"}