{"ast":null,"code":"var _jsxFileName = \"/Users/Jamie/Desktop/School/pui/homework_5/src/fillPicker.js\";\nimport \"./App.css\";\nimport React, { Component } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nlet currentFill = \"Select a fill\";\n\nclass FillPicker extends Component {\n  constructor(props) {\n    super(props);\n\n    this.handleToggle = id => {\n      const updatedItems = this.state.items.map(item => {\n        if (item.id === id && item.expanded === false) {\n          currentFill = item.fill;\n          return { ...item,\n            expanded: !item.expanded\n          };\n        }\n\n        if (item.expanded === true && item.id !== id) {\n          return { ...item,\n            expanded: !item.expanded\n          };\n        } else {\n          return item;\n        }\n      });\n      this.setState({ ...this.state,\n        items: updatedItems\n      });\n    };\n\n    this.state = {\n      items: [{\n        id: 1,\n        fill: \"Duck Down\",\n        expanded: true\n      }, {\n        id: 2,\n        fill: \"Memory Foam\",\n        expanded: false\n      }, {\n        id: 3,\n        fill: \"Hypoallergenic Poly-Blend\",\n        expanded: false\n      }]\n    };\n  } // select and deselect\n  // one and only one will always be selected\n\n\n  render() {\n    return this.state.items.map(al => /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h6\", {\n        children: [\"Fill: \", currentFill, \" \"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        onClick: () => this.handleToggle(al.id),\n        className: [\"fillOption\", al.expanded ? \"selected\" : \"unselected\"].join(\" \")\n      }, al.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 9\n      }, this), al.fill]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 7\n    }, this));\n  }\n\n}\n\nexport { FillPicker, currentFill };","map":{"version":3,"sources":["/Users/Jamie/Desktop/School/pui/homework_5/src/fillPicker.js"],"names":["React","Component","currentFill","FillPicker","constructor","props","handleToggle","id","updatedItems","state","items","map","item","expanded","fill","setState","render","al","join"],"mappings":";AAAA,OAAO,WAAP;AACA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;;AAEA,IAAIC,WAAW,GAAG,eAAlB;;AAEA,MAAMC,UAAN,SAAyBF,SAAzB,CAAmC;AACjCG,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACjB,UAAMA,KAAN;;AADiB,SAyBnBC,YAzBmB,GAyBHC,EAAD,IAAQ;AACrB,YAAMC,YAAY,GAAG,KAAKC,KAAL,CAAWC,KAAX,CAAiBC,GAAjB,CAAsBC,IAAD,IAAU;AAClD,YAAIA,IAAI,CAACL,EAAL,KAAYA,EAAZ,IAAkBK,IAAI,CAACC,QAAL,KAAkB,KAAxC,EAA+C;AAC7CX,UAAAA,WAAW,GAAGU,IAAI,CAACE,IAAnB;AACA,iBAAO,EACL,GAAGF,IADE;AAELC,YAAAA,QAAQ,EAAE,CAACD,IAAI,CAACC;AAFX,WAAP;AAID;;AACD,YAAID,IAAI,CAACC,QAAL,KAAkB,IAAlB,IAA0BD,IAAI,CAACL,EAAL,KAAYA,EAA1C,EAA8C;AAC5C,iBAAO,EACL,GAAGK,IADE;AAELC,YAAAA,QAAQ,EAAE,CAACD,IAAI,CAACC;AAFX,WAAP;AAID,SALD,MAKO;AACL,iBAAOD,IAAP;AACD;AACF,OAhBoB,CAArB;AAiBA,WAAKG,QAAL,CAAc,EACZ,GAAG,KAAKN,KADI;AAEZC,QAAAA,KAAK,EAAEF;AAFK,OAAd;AAID,KA/CkB;;AAEjB,SAAKC,KAAL,GAAa;AACXC,MAAAA,KAAK,EAAE,CACL;AACEH,QAAAA,EAAE,EAAE,CADN;AAEEO,QAAAA,IAAI,EAAE,WAFR;AAGED,QAAAA,QAAQ,EAAE;AAHZ,OADK,EAML;AACEN,QAAAA,EAAE,EAAE,CADN;AAEEO,QAAAA,IAAI,EAAE,aAFR;AAGED,QAAAA,QAAQ,EAAE;AAHZ,OANK,EAWL;AACEN,QAAAA,EAAE,EAAE,CADN;AAEEO,QAAAA,IAAI,EAAE,2BAFR;AAGED,QAAAA,QAAQ,EAAE;AAHZ,OAXK;AADI,KAAb;AAmBD,GAtBgC,CAwBjC;AACA;;;AAyBAG,EAAAA,MAAM,GAAG;AACP,WAAO,KAAKP,KAAL,CAAWC,KAAX,CAAiBC,GAAjB,CAAsBM,EAAD,iBAC1B;AAAA,8BACE;AAAA,6BAAWf,WAAX;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,eAEE;AAEE,QAAA,OAAO,EAAE,MAAM,KAAKI,YAAL,CAAkBW,EAAE,CAACV,EAArB,CAFjB;AAGE,QAAA,SAAS,EAAE,CACT,YADS,EAETU,EAAE,CAACJ,QAAH,GAAc,UAAd,GAA2B,YAFlB,EAGTK,IAHS,CAGJ,GAHI;AAHb,SACOD,EAAE,CAACV,EADV;AAAA;AAAA;AAAA;AAAA,cAFF,EAUGU,EAAE,CAACH,IAVN;AAAA;AAAA;AAAA;AAAA;AAAA,YADK,CAAP;AAcD;;AAjEgC;;AAoEnC,SAASX,UAAT,EAAqBD,WAArB","sourcesContent":["import \"./App.css\";\nimport React, { Component } from \"react\";\n\nlet currentFill = \"Select a fill\";\n\nclass FillPicker extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      items: [\n        {\n          id: 1,\n          fill: \"Duck Down\",\n          expanded: true,\n        },\n        {\n          id: 2,\n          fill: \"Memory Foam\",\n          expanded: false,\n        },\n        {\n          id: 3,\n          fill: \"Hypoallergenic Poly-Blend\",\n          expanded: false,\n        },\n      ],\n    };\n  }\n\n  // select and deselect\n  // one and only one will always be selected\n  handleToggle = (id) => {\n    const updatedItems = this.state.items.map((item) => {\n      if (item.id === id && item.expanded === false) {\n        currentFill = item.fill;\n        return {\n          ...item,\n          expanded: !item.expanded,\n        };\n      }\n      if (item.expanded === true && item.id !== id) {\n        return {\n          ...item,\n          expanded: !item.expanded,\n        };\n      } else {\n        return item;\n      }\n    });\n    this.setState({\n      ...this.state,\n      items: updatedItems,\n    });\n  };\n\n  render() {\n    return this.state.items.map((al) => (\n      <div>\n        <h6>Fill: {currentFill} </h6>\n        <div\n          key={al.id}\n          onClick={() => this.handleToggle(al.id)}\n          className={[\n            \"fillOption\",\n            al.expanded ? \"selected\" : \"unselected\",\n          ].join(\" \")}\n        />\n        {al.fill}\n      </div>\n    ));\n  }\n}\n\nexport { FillPicker, currentFill };\n"]},"metadata":{},"sourceType":"module"}