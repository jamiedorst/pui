{"ast":null,"code":"var _jsxFileName = \"/Users/Jamie/Desktop/School/pui/homework_5/src/fillPicker.js\";\nimport \"./App.css\";\nimport React, { Component } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst currentFill = \"Select a fill\";\n\nclass FillPicker extends Component {\n  constructor(props) {\n    super(props);\n\n    this.handleToggle = id => {\n      const newCurrentFill = this.state.items[id].fill;\n      const updatedItems = this.state.items.map(item => {\n        if (item.id === id && item.expanded === false) {\n          return { ...item,\n            expanded: item.id === id\n          };\n        }\n\n        if (item.expanded === true && item.id !== id) {\n          return { ...item,\n            expanded: item.id === id\n          };\n        } else {\n          return item;\n        }\n      });\n      this.setState({ ...this.state,\n        items: updatedItems,\n        currentFill: newCurrentFill\n      });\n      this.props.onFillChange(newCurrentFill);\n    };\n\n    this.state = {\n      currentFill: currentFill,\n      items: [{\n        id: 0,\n        fill: \"Duck Down\",\n        expanded: false\n      }, {\n        id: 1,\n        fill: \"Memory Foam\",\n        expanded: false\n      }, {\n        id: 2,\n        fill: \"Hypoallergenic Poly-Blend\",\n        expanded: false\n      }]\n    };\n  } // select and deselect\n  // one and only one will always be selected\n\n\n  render() {\n    return this.state.items.map(el => /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        onClick: () => this.handleToggle(el.id),\n        className: [\"fillOption\", el.expanded ? \"selected\" : \"unselected\"].join(\" \"),\n        children: el.fill\n      }, el.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 7\n    }, this));\n  }\n\n}\n\nexport { FillPicker, currentFill };","map":{"version":3,"sources":["/Users/Jamie/Desktop/School/pui/homework_5/src/fillPicker.js"],"names":["React","Component","currentFill","FillPicker","constructor","props","handleToggle","id","newCurrentFill","state","items","fill","updatedItems","map","item","expanded","setState","onFillChange","render","el","join"],"mappings":";AAAA,OAAO,WAAP;AACA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;;AAEA,MAAMC,WAAW,GAAG,eAApB;;AAEA,MAAMC,UAAN,SAAyBF,SAAzB,CAAmC;AACjCG,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACjB,UAAMA,KAAN;;AADiB,SA2BnBC,YA3BmB,GA2BHC,EAAD,IAAQ;AACrB,YAAMC,cAAc,GAAG,KAAKC,KAAL,CAAWC,KAAX,CAAiBH,EAAjB,EAAqBI,IAA5C;AACA,YAAMC,YAAY,GAAG,KAAKH,KAAL,CAAWC,KAAX,CAAiBG,GAAjB,CAAsBC,IAAD,IAAU;AAClD,YAAIA,IAAI,CAACP,EAAL,KAAYA,EAAZ,IAAkBO,IAAI,CAACC,QAAL,KAAkB,KAAxC,EAA+C;AAC7C,iBAAO,EACL,GAAGD,IADE;AAELC,YAAAA,QAAQ,EAAED,IAAI,CAACP,EAAL,KAAYA;AAFjB,WAAP;AAID;;AACD,YAAIO,IAAI,CAACC,QAAL,KAAkB,IAAlB,IAA0BD,IAAI,CAACP,EAAL,KAAYA,EAA1C,EAA8C;AAC5C,iBAAO,EACL,GAAGO,IADE;AAELC,YAAAA,QAAQ,EAAED,IAAI,CAACP,EAAL,KAAYA;AAFjB,WAAP;AAID,SALD,MAKO;AACL,iBAAOO,IAAP;AACD;AACF,OAfoB,CAArB;AAgBA,WAAKE,QAAL,CAAc,EACZ,GAAG,KAAKP,KADI;AAEZC,QAAAA,KAAK,EAAEE,YAFK;AAGZV,QAAAA,WAAW,EAAEM;AAHD,OAAd;AAKA,WAAKH,KAAL,CAAWY,YAAX,CAAwBT,cAAxB;AACD,KAnDkB;;AAGjB,SAAKC,KAAL,GAAa;AACXP,MAAAA,WAAW,EAAEA,WADF;AAEXQ,MAAAA,KAAK,EAAE,CACL;AACEH,QAAAA,EAAE,EAAE,CADN;AAEEI,QAAAA,IAAI,EAAE,WAFR;AAGEI,QAAAA,QAAQ,EAAE;AAHZ,OADK,EAML;AACER,QAAAA,EAAE,EAAE,CADN;AAEEI,QAAAA,IAAI,EAAE,aAFR;AAGEI,QAAAA,QAAQ,EAAE;AAHZ,OANK,EAWL;AACER,QAAAA,EAAE,EAAE,CADN;AAEEI,QAAAA,IAAI,EAAE,2BAFR;AAGEI,QAAAA,QAAQ,EAAE;AAHZ,OAXK;AAFI,KAAb;AAoBD,GAxBgC,CA0BjC;AACA;;;AA2BAG,EAAAA,MAAM,GAAG;AACP,WAAO,KAAKT,KAAL,CAAWC,KAAX,CAAiBG,GAAjB,CAAsBM,EAAD,iBAC1B;AAAA,6BACE;AAEE,QAAA,OAAO,EAAE,MAAM,KAAKb,YAAL,CAAkBa,EAAE,CAACZ,EAArB,CAFjB;AAGE,QAAA,SAAS,EAAE,CACT,YADS,EAETY,EAAE,CAACJ,QAAH,GAAc,UAAd,GAA2B,YAFlB,EAGTK,IAHS,CAGJ,GAHI,CAHb;AAAA,kBAQGD,EAAE,CAACR;AARN,SACOQ,EAAE,CAACZ,EADV;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,YADK,CAAP;AAcD;;AArEgC;;AAwEnC,SAASJ,UAAT,EAAqBD,WAArB","sourcesContent":["import \"./App.css\";\nimport React, { Component } from \"react\";\n\nconst currentFill = \"Select a fill\";\n\nclass FillPicker extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      currentFill: currentFill,\n      items: [\n        {\n          id: 0,\n          fill: \"Duck Down\",\n          expanded: false,\n        },\n        {\n          id: 1,\n          fill: \"Memory Foam\",\n          expanded: false,\n        },\n        {\n          id: 2,\n          fill: \"Hypoallergenic Poly-Blend\",\n          expanded: false,\n        },\n      ],\n    };\n  }\n\n  // select and deselect\n  // one and only one will always be selected\n  handleToggle = (id) => {\n    const newCurrentFill = this.state.items[id].fill;\n    const updatedItems = this.state.items.map((item) => {\n      if (item.id === id && item.expanded === false) {\n        return {\n          ...item,\n          expanded: item.id === id,\n        };\n      }\n      if (item.expanded === true && item.id !== id) {\n        return {\n          ...item,\n          expanded: item.id === id,\n        };\n      } else {\n        return item;\n      }\n    });\n    this.setState({\n      ...this.state,\n      items: updatedItems,\n      currentFill: newCurrentFill,\n    });\n    this.props.onFillChange(newCurrentFill);\n  };\n\n  render() {\n    return this.state.items.map((el) => (\n      <div>\n        <div\n          key={el.id}\n          onClick={() => this.handleToggle(el.id)}\n          className={[\n            \"fillOption\",\n            el.expanded ? \"selected\" : \"unselected\",\n          ].join(\" \")}\n        >\n          {el.fill}\n        </div>\n      </div>\n    ));\n  }\n}\n\nexport { FillPicker, currentFill };\n"]},"metadata":{},"sourceType":"module"}